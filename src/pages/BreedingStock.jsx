import React, { useState, useCallback } from "react";
import InputNumber from "../components/InputNumber";
import InputText from "../components/InputText";
import InputDate from "../components/InputDate";
import AddFoto from "../components/AddFoto";
import Genealogy from "../components/Genealogy";
import RightMenu from "../components/RightMenu";

const BreedingStock = () => {
    const [formData, setFormData] = useState({
        индивидуальныйНомер: "",
        инвентарныйНомер: "",
        идентификационныйНомер: "",
        кличка: "",
        датаРождения: "",
        местоРождения: "",
        порода: "",
        линия: "",
        породность: "",
        семейство: "",
        комуПринадлежит: "",
        назначениеКоровы: "",
        мастьИПриметы: "",
        группаКрови: "",
        происхождение: "",
        фото: null,
        генеалогия: {
            отец: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            мать: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            отец_отца: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            мать_отца: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            отец_матери: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            мать_матери: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            отец_отца_отца: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            мать_отца_отца: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            отец_матери_отца: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            мать_матери_отца: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            отец_отца_матери: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            мать_отца_матери: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            отец_матери_матери: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            мать_матери_матери: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
        },
        живаяМассаПриРождении: "",
        живаяМассаВ6Месяцев: "",
        живаяМассаВ10Месяцев: "",
        живаяМассаВ12Месяцев: "",
        живаяМассаВ18Месяцев: "",
        живаяМассаПриПервомОсоменении: "",
        возрастПервогоОсеменения: "",
        датаОсеменения: "",
        номерОсеменения: "",
        индивидуальныйНомерБыка: "",
        кличкаБыка: "",
        методСлучки: "",
        датаИсследованияНаСтельность: "",
        результатИсследованияНаСтельность: "",
        датаОтела: "",
        результатОтела: "",
        легкостьОтела: "",
        индивидуальныеНомераПриплода: "",
        датаЗапуска: "",
        продолжительностьСервисПериода: "",
        продолжительностьСухостойногоПериода: "",
        датаКонтрольногоДоения: "",
        удой: "",
        жир: "",
        белок: "",
        времяДоения: "",
        скоростьМолокоотдачи: "",
        баллСкоростиМолокоотдачи: "",
        удойЗаЛактацию: "",
        удойЗа305Дней: "",
        жирЗаЛактацию: "",
        жирЗа305Дней: "",
        белокЗаЛактацию: "",
        белокЗа305Дней: "",
        датаПовторногоЗапуска: "",
        количествоДойныхДней: "",
        перемещениеОткуда: "",
        перемещениеКуда: "",
        перемещениеДата: "",
        перемещениеВозраст: "",
        перемещениеЖиваяМасса: "",
        перемещениеЦельПеремещения: "",
        датаВыбытия: "",
        причинаВыбытия: "",
        линейнаяОценкаБ: {
            датаОценки: "",
            номерКоровы: "",
            датаРождения: "",
            датаОтела: "",
            деньЛактации: "",
            номерОтца: "",
            рост: "",
            глубинаТуловища: "",
            ширинаГруди: "",
            молочныйТип: "",
            положениеТаза: "",
            ширинаТаза: "",
            постановкаЗаднихНогСбоку: "",
            уголКопыт: "",
            постановкаЗаднихНогСзади: "",
            качествоКостяка: "",
            прикреплениеПереднихДолей: "",
            глубинаВымени: "",
            высотаПрикрепленияЗаднихДолей: "",
            центральнаяСвязка: "",
            расположениеПереднихСосков: "",
            расположениеЗаднихСосков: "",
            длинаСосков: "",
            длинаКрестца: "",
            линияВерха: "",
            обмускуленность: "",
            упитанность: "",
            скакательныйСустав: "",
            легкостьДвижения: "",
            ширинаЗаднихДолей: "",
            балансВымени: "",
            выраженностьВен: "",
            длинаПереднихДолей: "",
            толщинаСосков: "",
        },
        линейнаяОценкаА: {
            молочныйТип: "",
            объемТуловища: "",
            конечности: "",
            вымя: "",
            итоговаяОценка: "",
            экстерьерПоБонитировке: "",
            мягкаяСпина: false,
            горбатаяСпина: false,
            слабаяПоясница: false,
            крыловидныеЛопатки: false,
            перехватЗаЛопатками: false,
            неровнаяЛинияВерха: false,
            высокаяПостановкаХвоста: false,
            запавшийКореньХвоста: false,
            крышевидныйКрестец: false,
            шилозадость: false,
            разметПереднихНог: false,
            мягкиеБабки: false,
            межкопытнаяЩель: false,
            наклонноеДноВымени: false,
            допСоски: false,
            неправильнаяФормаСосков: false,
            тонкиеСоски: false,
            перекрестныеЗадниеСоски: false,
            атрофияДолейВымени: false,
        },
    });

    // Поля для основной формы
    const mainFields = [
        { name: "индивидуальныйНомер", label: "Индивидуальный номер", type: "number" },
        { name: "инвентарныйНомер", label: "Инвентарный номер", type: "number" },
        { name: "идентификационныйНомер", label: "Идентификационный номер", type: "number" },
        { name: "кличка", label: "Кличка", type: "text" },
        { name: "датаРождения", label: "Дата рождения", type: "date" },
        { name: "местоРождения", label: "Место рождения", type: "text" },
        { name: "порода", label: "Порода", type: "text" },
        { name: "линия", label: "Линия", type: "text" },
        { name: "породность", label: "Породность", type: "text" },
        { name: "семейство", label: "Семейство", type: "text" },
        { name: "комуПринадлежит", label: "Кому принадлежит", type: "text" },
        { name: "назначениеКоровы", label: "Назначение коровы", type: "text" },
        { name: "мастьИПриметы", label: "Масть и приметы", type: "text" },
        { name: "группаКрови", label: "Группа крови", type: "number" },
        { name: "происхождение", label: "Происхождение (если родилась не в хозяйстве)", type: "text" },
    ];

    // Поля для второй формы
    const secondaryFields = [
        { name: "живаяМассаПриРождении", label: "Живая масса при рождении, кг", type: "number" },
        { name: "живаяМассаВ6Месяцев", label: "Живая масса в 6 месяцев, кг", type: "number" },
        { name: "живаяМассаВ10Месяцев", label: "Живая масса в 10 месяцев, кг", type: "number" },
        { name: "живаяМассаВ12Месяцев", label: "Живая масса в 12 месяцев, кг", type: "number" },
        { name: "живаяМассаВ18Месяцев", label: "Живая масса в 18 месяцев, кг", type: "number" },
        { name: "живаяМассаПриПервомОсоменении", label: "Живая масса при первом осеменении, кг", type: "number" },
        { name: "возрастПервогоОсеменения", label: "Возраст первого осеменения, мес.", type: "text" },
        { name: "датаОсеменения", label: "Дата осеменения (1-20)", type: "text" },
        { name: "номерОсеменения", label: "Номер осеменения (1-20)", type: "text" },
        { name: "индивидуальныйНомерБыка", label: "Индивидуальный номер быка-осеменителя (1-20)", type: "text" },
        { name: "кличкаБыка", label: "Кличка быка-осеменителя (1-20)", type: "text" },
        { name: "методСлучки", label: "Метод случки (1-20)", type: "text" },
        { name: "датаИсследованияНаСтельность", label: "Дата исследования на стельность (1-20)", type: "text" },
        { name: "результатИсследованияНаСтельность", label: "Результат исследования на стельность (1-20)", type: "text" },
        { name: "датаОтела", label: "Дата отела (1-20)", type: "text" },
        { name: "результатОтела", label: "Результат отела (1-20)", type: "text" },
        { name: "легкостьОтела", label: "Легкость отела (1-20)", type: "text" },
        { name: "индивидуальныеНомераПриплода", label: "Индивидуальный номер приплода (один ко многим) (1-20)", type: "text" },
        { name: "датаЗапуска", label: "Дата запуска (1-20)", type: "date" },
        { name: "продолжительностьСервисПериода", label: "Продолжительность сервис-периода, дней (1-20)", type: "text" },
        { name: "продолжительностьСухостойногоПериода", label: "Продолжительность сухостойного периода, дней (1-20)", type: "text" },
        { name: "датаКонтрольногоДоения", label: "Дата контрольного доения", type: "date" },
        { name: "удой", label: "Результат контрольного доения - удой, кг", type: "text" },
        { name: "жир", label: "Результат контрольного доения - жир, %", type: "text" },
        { name: "белок", label: "Результат контрольного доения - белок, %", type: "text" },
        { name: "времяДоения", label: "Время доения, мин.", type: "text" },
        { name: "скоростьМолокоотдачи", label: "Скорость молокоотдачи, кг/мин.", type: "text" },
        { name: "баллСкоростиМолокоотдачи", label: "Балл за скорость молокоотдачи", type: "text" },
        { name: "удойЗаЛактацию", label: "Удой за всю лактацию, кг", type: "text" },
        { name: "удойЗа305Дней", label: "Удой за 305 дней, кг", type: "text" },
        { name: "жирЗаЛактацию", label: "Жир за всю лактацию, %", type: "text" },
        { name: "жирЗа305Дней", label: "Жир за 305 дней, %", type: "text" },
        { name: "белокЗаЛактацию", label: "Белок за всю лактацию, %", type: "text" },
        { name: "белокЗа305Дней", label: "Белок за 305 дней, %", type: "text" },
        { name: "датаПовторногоЗапуска", label: "Дата запуска (повторно)", type: "date" },
        { name: "количествоДойныхДней", label: "Количество дойных дней", type: "text" },
        { name: "перемещениеОткуда", label: "Перемещение - откуда", type: "text" },
        { name: "перемещениеКуда", label: "Перемещение - куда", type: "text" },
        { name: "перемещениеДата", label: "Перемещение - дата", type: "date" },
        { name: "перемещениеВозраст", label: "Перемещение - возраст", type: "text" },
        { name: "перемещениеЖиваяМасса", label: "Перемещение - живая масса", type: "text" },
        { name: "перемещениеЦельПеремещения", label: "Перемещение - цель перемещения", type: "text" },
        { name: "датаВыбытия", label: "Дата выбытия", type: "date" },
        { name: "причинаВыбытия", label: "Причина выбытия", type: "text" },
    ];

    // Поля для линейной оценки Б
    const linearBFields = [
        { name: "датаОценки", label: "дата оценки", type: "date" },
        { name: "номерКоровы", label: "индивидуальный номер коровы", type: "number" },
        { name: "датаРождения", label: "дата рождения", type: "date" },
        { name: "датаОтела", label: "дата отела", type: "date", noValue: true },
        { name: "деньЛактации", label: "день лактации", type: "number", noValue: true },
        { name: "номерОтца", label: "индивидуальный номер отца", type: "number", noValue: true },
        { name: "рост", label: "рост (от 1-9)", type: "number", noValue: true },
        { name: "глубинаТуловища", label: "глубина туловища (от 1-9)", type: "number", noValue: true },
        { name: "ширинаГруди", label: "ширина груди (от 1-9)", type: "number", noValue: true },
        { name: "молочныйТип", label: "молочный тип (от 1-9)", type: "number", noValue: true },
        { name: "положениеТаза", label: "положение таза (от 1-9)", type: "number", noValue: true },
        { name: "ширинаТаза", label: "ширина таза (от 1-9)", type: "number", noValue: true },
        { name: "постановкаЗаднихНогСбоку", label: "постановка задних ног (вид сбоку) (от 1-9)", type: "number", noValue: true },
        { name: "уголКопыт", label: "угол копыт (от 1-9)", type: "number", noValue: true },
        { name: "постановкаЗаднихНогСзади", label: "постановка задних ног (вид сзади) (от 1-9)", type: "number", noValue: true },
        { name: "качествоКостяка", label: "качество костяка (от 1-9)", type: "number", noValue: true },
        { name: "прикреплениеПереднихДолей", label: "прикрепление передних долей вымени (от 1-9)", type: "number", noValue: true },
        { name: "глубинаВымени", label: "глубина вымени (от 1-9)", type: "number", noValue: true },
        { name: "высотаПрикрепленияЗаднихДолей", label: "высота прикрепления задних долей вымени (от 1-9)", type: "number", noValue: true },
        { name: "центральнаяСвязка", label: "центральная связка вымени (от 1-9)", type: "number", noValue: true },
        { name: "расположениеПереднихСосков", label: "расположение передних сосков вымени (от 1-9)", type: "number", noValue: true },
        { name: "расположениеЗаднихСосков", label: "расположение задних сосков вымени (от 1-9)", type: "number", noValue: true },
        { name: "длинаСосков", label: "длина сосков (от 1-9)", type: "number", noValue: true },
        { name: "длинаКрестца", label: "длина крестца (от 1-9)", type: "number", noValue: true },
        { name: "линияВерха", label: "линия верха (от 1-9)", type: "number", noValue: true },
        { name: "обмускуленность", label: "обмускуленность (от 1-9)", type: "number", noValue: true },
        { name: "упитанность", label: "упитанность (от 1-9)", type: "number", noValue: true },
        { name: "скакательныйСустав", label: "скакательный сустав (вид сзади) (от 1-9)", type: "number", noValue: true },
        { name: "легкостьДвижения", label: "легкость движения (от 1-9)", type: "number", noValue: true },
        { name: "ширинаЗаднихДолей", label: "ширина задних долей вымени (от 1-9)", type: "number", noValue: true },
        { name: "балансВымени", label: "баланс вымени (от 1-9)", type: "number", noValue: true },
        { name: "выраженностьВен", label: "выраженность вен вымени (от 1-9)", type: "number", noValue: true },
        { name: "длинаПереднихДолей", label: "длина передних долей вымени (от 1-9)", type: "number", noValue: true },
        { name: "толщинаСосков", label: "толщина сосков (от 1-9)", type: "number", noValue: true },
    ];

    // Поля для линейной оценки А
    const linearAFields = [
        { name: "молочныйТип", label: "молочный тип (от 50-100)", type: "number", noValue: true },
        { name: "объемТуловища", label: "объем туловища (от 50-100)", type: "number", noValue: true },
        { name: "конечности", label: "конечности (от 50-100)", type: "number", noValue: true },
        { name: "вымя", label: "вымя (от 50-100)", type: "number", noValue: true },
        { name: "итоговаяОценка", label: "итоговая оценка (от 1-100)", type: "number", noValue: true },
        { name: "экстерьерПоБонитировке", label: "экстерьер по бонитировке", type: "text", noValue: true },
    ];

    const linearABooleanFields = [
        "мягкаяСпина", "горбатаяСпина", "слабаяПоясница", "крыловидныеЛопатки", "перехватЗаЛопатками",
        "неровнаяЛинияВерха", "высокаяПостановкаХвоста", "запавшийКореньХвоста", "крышевидныйКрестец",
        "шилозадость", "разметПереднихНог", "мягкиеБабки", "межкопытнаяЩель", "наклонноеДноВымени",
        "допСоски", "неправильнаяФормаСосков", "тонкиеСоски", "перекрестныеЗадниеСоски", "атрофияДолейВымени",
    ];

    const handleInputChange = (field, value, nestedField = null) => {
        if (nestedField) {
            setFormData((prev) => ({
                ...prev,
                [nestedField]: {
                    ...prev[nestedField],
                    [field]: value,
                },
            }));
        } else {
            setFormData((prev) => ({
                ...prev,
                [field]: value,
            }));
        }
    };

    const handleImageUpload = (imageUrl) => {
        handleInputChange("фото", imageUrl);
    };

    const handleGenealogyChange = useCallback((genealogyData) => {
        setFormData((prev) => ({
            ...prev,
            генеалогия: genealogyData,
        }));
    }, []);

    const handleSearchResult = (searchResult) => {
        if (searchResult) {
            setFormData((prev) => ({
                ...prev,
                ...searchResult,
                генеалогия: searchResult.генеалогия || prev.генеалогия,
            }));
        } else {
            resetForm();
        }
    };

    const resetForm = () => {
        setFormData({
            индивидуальныйНомер: "",
            инвентарныйНомер: "",
            идентификационныйНомер: "",
            кличка: "",
            датаРождения: "",
            местоРождения: "",
            порода: "",
            линия: "",
            породность: "",
            семейство: "",
            комуПринадлежит: "",
            назначениеКоровы: "",
            мастьИПриметы: "",
            группаКрови: "",
            происхождение: "",
            фото: null,
            генеалогия: {
                отец: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
                мать: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
                отец_отца: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
                мать_отца: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
                отец_матери: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
                мать_матери: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
                отец_отца_отца: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
                мать_отца_отца: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
                отец_матери_отца: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
                мать_матери_отца: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
                отец_отца_матери: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
                мать_отца_матери: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
                отец_матери_матери: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
                мать_матери_матери: { индивидуальный_номер: "", кличка: "", дата_рождения: "" },
            },
            живаяМассаПриРождении: "",
            живаяМассаВ6Месяцев: "",
            живаяМассаВ10Месяцев: "",
            живаяМассаВ12Месяцев: "",
            живаяМассаВ18Месяцев: "",
            живаяМассаПриПервомОсоменении: "",
            возрастПервогоОсеменения: "",
            датаОсеменения: "",
            номерОсеменения: "",
            индивидуальныйНомерБыка: "",
            кличкаБыка: "",
            методСлучки: "",
            датаИсследованияНаСтельность: "",
            результатИсследованияНаСтельность: "",
            датаОтела: "",
            результатОтела: "",
            легкостьОтела: "",
            индивидуальныеНомераПриплода: "",
            датаЗапуска: "",
            продолжительностьСервисПериода: "",
            продолжительностьСухостойногоПериода: "",
            датаКонтрольногоДоения: "",
            удой: "",
            жир: "",
            белок: "",
            времяДоения: "",
            скоростьМолокоотдачи: "",
            баллСкоростиМолокоотдачи: "",
            удойЗаЛактацию: "",
            удойЗа305Дней: "",
            жирЗаЛактацию: "",
            жирЗа305Дней: "",
            белокЗаЛактацию: "",
            белокЗа305Дней: "",
            датаПовторногоЗапуска: "",
            количествоДойныхДней: "",
            перемещениеОткуда: "",
            перемещениеКуда: "",
            перемещениеДата: "",
            перемещениеВозраст: "",
            перемещениеЖиваяМасса: "",
            перемещениеЦельПеремещения: "",
            датаВыбытия: "",
            причинаВыбытия: "",
            линейнаяОценкаБ: {
                датаОценки: "",
                номерКоровы: "",
                датаРождения: "",
                датаОтела: "",
                деньЛактации: "",
                номерОтца: "",
                рост: "",
                глубинаТуловища: "",
                ширинаГруди: "",
                молочныйТип: "",
                положениеТаза: "",
                ширинаТаза: "",
                постановкаЗаднихНогСбоку: "",
                уголКопыт: "",
                постановкаЗаднихНогСзади: "",
                качествоКостяка: "",
                прикреплениеПереднихДолей: "",
                глубинаВымени: "",
                высотаПрикрепленияЗаднихДолей: "",
                центральнаяСвязка: "",
                расположениеПереднихСосков: "",
                расположениеЗаднихСосков: "",
                длинаСосков: "",
                длинаКрестца: "",
                линияВерха: "",
                обмускуленность: "",
                упитанность: "",
                скакательныйСустав: "",
                легкостьДвижения: "",
                ширинаЗаднихДолей: "",
                балансВымени: "",
                выраженностьВен: "",
                длинаПереднихДолей: "",
                толщинаСосков: "",
            },
            линейнаяОценкаА: {
                молочныйТип: "",
                объемТуловища: "",
                конечности: "",
                вымя: "",
                итоговаяОценка: "",
                экстерьерПоБонитировке: "",
                мягкаяСпина: false,
                горбатаяСпина: false,
                слабаяПоясница: false,
                крыловидныеЛопатки: false,
                перехватЗаЛопатками: false,
                неровнаяЛинияВерха: false,
                высокаяПостановкаХвоста: false,
                запавшийКореньХвоста: false,
                крышевидныйКрестец: false,
                шилозадость: false,
                разметПереднихНог: false,
                мягкиеБабки: false,
                межкопытнаяЩель: false,
                наклонноеДноВымени: false,
                допСоски: false,
                неправильнаяФормаСосков: false,
                тонкиеСоски: false,
                перекрестныеЗадниеСоски: false,
                атрофияДолейВымени: false,
            },
        });
    };

    const renderInput = (field, nestedField = null) => {
        const value = nestedField ? formData[nestedField][field.name] : formData[field.name];
        const Component = field.type === "number" ? InputNumber : field.type === "date" ? InputDate : InputText;

        return (
            <div key={field.name} className="input-wrapper">
                <Component
                    value={field.noValue ? undefined : value}
                    onChange={(e) => handleInputChange(field.name, e.target.value, nestedField)}
                />
                <label className="floating-label">{field.label}</label>
            </div>
        );
    };

    return (
        <div className="breeding-stock-container">
            <RightMenu formData={formData} onSearchResult={handleSearchResult} onResetForm={resetForm} />
            <div className="text_title">
                <h1>Маточное поголовье</h1>
            </div>
            <div className="add-foto-container">
                <AddFoto onImageUpload={handleImageUpload} externalImage={formData.фото} />
            </div>
            <div className="main-breeding-stock">
                <form>{mainFields.map((field) => renderInput(field))}</form>
            </div>
            <div className="genealogy-container">
                <Genealogy onGenealogyChange={handleGenealogyChange} genealogyData={formData.генеалогия} />
            </div>
            <div className="main-breeding-stock">
                <form>{secondaryFields.map((field) => renderInput(field))}</form>
            </div>
            <div className="linear-system">
                <h3>Линейная оценка системы Б</h3>
                <form>{linearBFields.map((field) => renderInput(field, "линейнаяОценкаБ"))}</form>
            </div>
            <div className="linear-system">
                <h3>Линейная оценка системы А</h3>
                <form>
                    {linearAFields.map((field) => renderInput(field, "линейнаяОценкаА"))}
                    {linearABooleanFields.map((field) => (
                        <div key={field} className="input-wrapper">
                            <select
                                className="modern-input"
                                value={formData.линейнаяОценкаА[field] ? "Да" : "Нет"}
                                onChange={(e) =>
                                    handleInputChange(field, e.target.value === "Да", "линейнаяОценкаА")
                                }
                            >
                                <option>Да</option>
                                <option>Нет</option>
                            </select>
                            <label className="floating-label">
                                {field
                                    .replace(/([A-Z])/g, " $1")
                                    .replace("межкопытнаяЩель", "большая межкопытная щель")
                                    .toLowerCase()}
                            </label>
                        </div>
                    ))}
                </form>
            </div>
        </div>
    );
};

export default BreedingStock;
